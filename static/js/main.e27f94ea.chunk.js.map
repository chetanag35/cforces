{"version":3,"sources":["Contest.js","RatingChanges.js","ProblemList.js","App.js","serviceWorker.js","index.js"],"names":["Contest","props","item","phase","className","href","id","target","name","RatingChanges","contestName","rank","oldRating","newRating","ProblemList","url","contestId","index","style","margin","padding","textDecoration","color","float","rating","App","state","contest","problems","users","loading","character","contest_category","user1","user1_data","user1_contest","user2","user2_data","user2_contest","problem_tags","problems_result","handleContest","bind","handleProblems","handleUsers","handleContestAll","handleDiv1","handleDiv2","handleDiv3","handleEducational","handleOthers","handleUser1","handleChangeInput","handleUser2","getContestList1","getContestList2","handleTags","fetch","then","response","json","data","setState","this","console","log","Promise","all","value","event","type","checked","result","map","key","text","contest_list","includes","onClick","position","verticalAlign","paddingTop","placeholder","onChange","handle","firstName","lastName","country","city","maxRating","maxRank","friendOfCount","status","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.e27f94ea.chunk.js","sourcesContent":["import React from \"react\"\nimport './index.css'\n\nfunction Contest(props) {\n    const url = \"https://codeforces.com/contest/\"\n    //console.log(props.item.name + \" \" + props.contest_category + \" \" + props.item.name.includes(props.contest_category))\n    return(\n        <div>\n            {props.item.phase === \"FINISHED\" ? (\n            <div className=\"contest\"><a \n            href={url + props.item.id} target=\"_blank\" className=\"contest\">{props.item.name}\n            </a></div>\n            ) : null}\n                \n        </div>\n    )\n}\n\nexport default Contest","import React from \"react\"\n\nfunction RatingChanges(props) {\n    \n    return(\n        <div>\n            {props.item.contestName ?\n            <div className=\"contestname\">{props.item.contestName}\n            <span className=\"contestDetails\"> {\"Rank:\" + props.item.rank}</span> <span className=\"contestDetails\">{\"Rating Changes: \" + props.item.oldRating + \" --->\" + props.item.newRating}</span></div>:\n            <div>IIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIII</div>}\n            <hr/>\n        </div>\n    )\n}\n\nexport default RatingChanges","import React from \"react\"\n\nfunction ProblemList(props){\n\n    const url = \"https://codeforces.com/contest/\" + props.item.contestId + \"/problem/\" + props.item.index \n\n    return(\n        <div style={{margin:\"5px\",padding:\"5px\"}}>\n            <a style={{textDecoration:\"none\",color:\"#111\"}} href={url} target=\"_blank\">{props.item.name}</a>\n            <span style={{float:\"right\"}}>{props.item.rating}</span>\n            <hr/>\n        </div>\n    )\n}\n\n\nexport default ProblemList","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Contest from './Contest' ;\nimport RatingChanges from './RatingChanges'\nimport ProblemsList from './ProblemList'\n\n// function App() {\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n        \n//       </header>\n//     </div>\n//   );\n// }\n\nclass App extends React.Component{\n\n    constructor(){\n      super()\n      this.state = {\n        contest:true,\n        problems: false,\n        users: false,\n        loading: true,\n        character: \"\",\n        contest_category: \"all\",\n        user1:\"\",\n        user1_data:\"\",\n        user1_contest:null,\n        user2:\"\",\n        user2_data:\"\",\n        user2_contest:\"\",\n        problem_tags:\"2-sat\",\n        problems_result:\"\"\n      }\n      this.handleContest = this.handleContest.bind(this)\n      this.handleProblems = this.handleProblems.bind(this)\n      this.handleUsers = this.handleUsers.bind(this)\n      this.handleContestAll = this.handleContestAll.bind(this)\n      this.handleDiv1 = this.handleDiv1.bind(this)\n      this.handleDiv2 = this.handleDiv2.bind(this)\n      this.handleDiv3 = this.handleDiv3.bind(this)\n      this.handleEducational = this.handleEducational.bind(this)\n      this.handleOthers = this.handleOthers.bind(this)\n      this.handleUser1 = this.handleUser1.bind(this)\n      this.handleChangeInput = this.handleChangeInput.bind(this)\n      this.handleUser2 = this.handleUser2.bind(this)\n      this.getContestList1 = this.getContestList1.bind(this)\n      this.getContestList2 = this.getContestList2.bind(this)\n      this.handleTags = this.handleTags.bind(this)\n    }\n\n    componentDidMount(){\n      fetch(\"https://codeforces.com/api/contest.list\")\n      .then(response => response.json())\n      .then(data => {\n        this.setState({\n          loading: false,\n          character: data\n        })\n      })\n    }\n\n    handleContest() {\n      this.setState({contest:true,problems:false,users:false, loading:false})\n      console.log(this.state.contest + \" \" + this.state.problems + \" \" + this.state.users)\n    }\n\n    handleProblems(){\n      this.setState({contest:false,problems:true,users:false,  loading:false})\n      console.log(this.state.contest + \" \" + this.state.problems + \" \" + this.state.users)\n    }\n\n    handleUsers(){\n      this.setState({contest:false,problems:false,users:true,  loading:false})\n      console.log(this.state.contest + \" \" + this.state.problems + \" \" + this.state.users)\n    }\n\n    handleContestAll(){\n      this.setState({\n        contest_category:\"all\"})\n    }\n\n    handleDiv1(){\n      this.setState({\n        contest_category:\"Div. 1\"})\n\n    }\n\n    handleDiv2(){\n      this.setState({\n        contest_category:\"Div. 2\"})\n    }\n\n    handleDiv3(){\n      this.setState({\n        contest_category:\"Div. 3\"})\n    }\n\n    handleEducational(){\n      this.setState({\n        contest_category:\"Educational Codeforces Round\"})\n    }\n\n    handleOthers(){\n      this.setState({\n        contest_category:\"others\"})\n    }\n\n    handleUser1(){\n      this.setState({loading:true})\n\n      Promise.all([\n        fetch(\"https://codeforces.com/api/user.info?handles=\" + this.state.user1).then(value => value.json()),\n        fetch(\"https://codeforces.com/api/user.rating?handle=\" + this.state.user1).then(value => value.json())\n      ]).then((data)=>{\n        this.setState({\n          user1_contest:data[1],\n          user1_data:data[0],\n          loading:false\n        })\n    })\n    }\n\n    handleUser2(){\n      this.setState({loading:true})\n\n      Promise.all([\n        fetch(\"https://codeforces.com/api/user.info?handles=\" + this.state.user2).then(response => response.json()),\n        fetch(\"https://codeforces.com/api/user.rating?handle=\" + this.state.user2).then(response => response.json())\n      ]).then((data) =>{\n        this.setState({\n          user2_contest:data[1],\n          user2_data:data[0],\n          loading:false\n        })\n      })\n    }\n\n\n    handleChangeInput(event) {\n      const {name, value, type, checked} = event.target\n      type === \"checkbox\" ? this.setState({ [name]: checked }) : this.setState({ [name]: value })\n  }\n\n  handleTags(){\n\n      this.setState({loading:true})\n\n      fetch(\"https://codeforces.com/api/problemset.problems?tags=\" + this.state.problem_tags)\n      .then(response => response.json())\n      .then(data =>{\n        this.setState({\n          loading:false,\n          problems_result:data\n        })\n      }\n      )\n  }\n\n    getContestList1(){\n  \n      return (\n        this.state.user1_contest.result.map(item =>\n          <RatingChanges \n          key={item.contestId} \n          item={item}\n          />)\n      )\n    }\n\n    getContestList2(){\n\n      return (\n        this.state.user2_contest.result.map(item =>\n          <RatingChanges \n          key={item.contestId} \n          item={item}\n          />)\n      )\n\n    }\n\n    render() {\n      const text = this.state.loading ? \"loading...\" : \"\"\n\n      //let contest_list_json = this.state.character.result\n\n      //console.log(contest_list_json[0].id)\n      const contest_list = this.state.loading ? \"\" : \n      this.state.character.result.map(item => item.phase=== \"FINISHED\" && (this.state.contest_category === \"all\" || \n      (this.state.contest_category===\"others\" && item.name.includes(\"Div. 1\") === false && item.name.includes(\"Div. 2\")===false && item.name.includes(\"Div. 3\")===false && item.name.includes(\"Educational Codeforces Round\")===false) || \n      item.name.includes(this.state.contest_category))\n      ?\n      <Contest \n      key={item.id} \n      item={item} \n      contest_category={this.state.contest_category}\n      /> : null)\n\n  \n      //const user1_contest_list = (this.state.loading === false && this.state.user1_contest)? \n      // this.state.user1_contest.result.map(item =>\n      //    <RatingChanges \n      //    key={item.contestId} \n      //    item={item}\n      //    />):null\n    \n\n      return(\n          <div>\n            <div className=\"sidenav\">\n            <a href=\"#contests\" onClick={this.handleContest}>Contests</a>\n            <a href=\"#problems\" onClick={this.handleProblems}>Problems</a>\n            <a href=\"#users\" onClick={this.handleUsers}>Users</a>\n            </div>\n\n\n            <div className=\"main\">\n              <div>{text}</div>\n              {this.state.contest === true && this.state.loading === false? \n              <div>\n              <ul style={{position:\"fixed\",verticalAlign:\"middle\"}}>\n                <li><a href=\"#all\" onClick={this.handleContestAll}>ALL</a></li>\n                <li><a href=\"#div1\" onClick={this.handleDiv1}>Div.1</a></li>\n                <li><a href=\"#div2\" onClick={this.handleDiv2}>Div.2</a></li>\n                <li><a href=\"#div3\" onClick={this.handleDiv3}>Div.3</a></li>\n                <li><a href=\"#educational\" onClick={this.handleEducational}>Educational Round</a></li>\n                <li><a href=\"#others\" onClick={this.handleOthers}>Others</a></li>\n              </ul>\n              <div style={{paddingTop:50}}>{contest_list}</div>\n              </div>\n              : (this.state.users === true && this.state.loading === false ?\n                <div className=\"main\">\n                  <div>{text}</div>\n            \n              \n            <div >\n              <div>\n              <h2>  Search users: </h2>\n              <input type=\"text\" name=\"user1\" placeholder=\"Enter User1 handle\" value={this.state.user1} onChange={this.handleChangeInput}></input>\n              <button className=\"button\" onClick={this.handleUser1}>Search User</button>\n              {this.state.user1_data === \"\"? null:\n              (this.state.user1_data.result? <div>\n            <p>\n              handle:\n              {this.state.user1_data.result[0].handle}\n            </p>\n            <p>Name : {this.state.user1_data.result[0].firstName + \" \" + \n            this.state.user1_data.result[0].lastName}</p>\n            <p>\n              Country:\n              {this.state.user1_data.result[0].country}\n            </p>\n            <p>\n              City:\n              {this.state.user1_data.result[0].city}\n            </p>\n            <p>\n              Rating:\n              {this.state.user1_data.result[0].rating + \"(\" + this.state.user1_data.result[0].rank + \")\"} \n            </p>\n            <p>\n              Max Rating:\n              {this.state.user1_data.result[0].maxRating + \"(\" + this.state.user1_data.result[0].maxRank + \")\"}\n            </p>\n            <p>\n              Friends:\n              {this.state.user1_data.result[0].friendOfCount}\n            </p>\n            <p>\n                Rating Changes:\n                {this.getContestList1()}\n            </p> \n            </div>: (<h1 style={{float:\"right\"}}>Invalid Usernames\n              </h1>) )}\n            </div>\n            </div>\n\n            \n              \n            <div>\n              <div>\n              <h2>  Search users: </h2>\n              <input type=\"text\" name=\"user2\" placeholder=\"Enter User 2 handle\" value={this.state.user2} onChange={this.handleChangeInput}></input>\n              <button className=\"button\" onClick={this.handleUser2}>Search User</button>\n              {this.state.user2_data === \"\"? null:\n              <div>\n            <p>\n              handle:\n              {this.state.user2_data.result[0].handle}\n            </p>\n            <p>Name : {this.state.user2_data.result[0].firstName + \" \" + \n            this.state.user2_data.result[0].lastName}</p>\n            <p>\n              Country:\n              {this.state.user2_data.result[0].country}\n            </p>\n            <p>\n              City:\n              {this.state.user2_data.result[0].city}\n            </p>\n            <p>\n              Rating:\n              {this.state.user2_data.result[0].rating + \"(\" + this.state.user2_data.result[0].rank + \")\"} \n            </p>\n            <p>\n              Max Rating:\n              {this.state.user2_data.result[0].maxRating + \"(\" + this.state.user2_data.result[0].maxRank + \")\"}\n            </p>\n            <p>\n              Friends:\n              {this.state.user2_data.result[0].friendOfCount}\n            </p>\n            <p>\n              Rating Changes:\n              {this.getContestList2()}\n            </p>\n            </div>}\n            </div>\n            </div>\n\n\n\n\n            </div>\n            : this.state.loading? <div>{text}</div> :(this.state.problems === true && this.state.loading === false?\n              <div className =\"main\">\n                <label>Select problem tags:</label>\n              <select\n                value={this.state.problem_tags}\n                onChange={this.handleChangeInput}\n                name=\"problem_tags\"\n                style ={{padding:\"5px\",margin:\"5px\"}}\n              >\n                <option value=\"2-sat\">2-sat</option>\n                <option value=\"binary search\">binary search</option>\n                <option value=\"bitmasks\">bitmasks</option>\n                <option value=\"brute force\">brute force</option>\n                <option value=\"chinese remainder theorem\">chinese remainder theorem</option>\n                <option value=\"combinatorics\">combinatorics</option>\n                <option value=\"constructive algorithms\">constructive algorithms</option>\n                <option value=\"data structures\">data structures</option>\n                <option value=\"dfs and similar\">dfs and similar</option>\n                <option value=\"divide and conquer\">divide and conquer</option>\n                <option value=\"dp\">dp</option>\n                <option value=\"dsu\">dsu</option>\n                <option value=\"expression parsing\">expression parsing</option>\n                <option value=\"ffft\">ffft</option>\n                <option value=\"flows\">flows</option>\n                <option value=\"games\">games</option>\n                <option value=\"geometry\">geometry</option>\n                <option value=\"graph matching\">graph matching</option>\n                <option value=\"graphs\">graphs</option>\n                <option value=\"greedy\">greedy</option>\n                <option value=\"hashing\">hashing</option>\n                <option value=\"implementation\">implementation</option>\n                <option value=\"interactive\">interactive</option>\n                <option value=\"math\">math</option>\n                <option value=\"matrices\">matrices</option>\n                <option value=\"meet-in-the-middle\">meet-in-the-middle</option>\n                <option value=\"number theory\">number theory</option>\n                <option value=\"probabilities\">probabilities</option>\n                <option value=\"schedules\">schedules</option>\n                <option value=\"shortest paths\">shortest paths</option>\n                <option value=\"sortings\">sortings</option>\n                <option value=\"string suffix structures\">string suffix structures</option>\n                <option value=\"strings\">strings</option>\n                <option value=\"ternary search\">ternary search</option>\n                <option value=\"trees\">trees</option>\n                <option value=\"two pointers\">two pointers</option>\n              </select>\n\n              <button className=\"button\" onClick={this.handleTags}>Search Problems</button>\n              <div>\n\n              {this.state.problems_result.status ? \n              \n              this.state.problems_result.result.problems.map(item => (\n              <ProblemsList \n                key={item.contestId,item.index}\n                item = {item}\n              /> ))\n              \n              :null}\n\n              </div>\n\n                </div>\n              :null))}\n          \n          </div>\n        </div>\n      )\n    }\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}